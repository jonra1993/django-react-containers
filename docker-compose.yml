version: "3.9"

services:     
  db:
    container_name: db
    restart: always
    image: "bitnami/postgresql:13.3.0"    
    expose:
      - "5432"    
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRESQL_USERNAME: "${DB_USER}"
      POSTGRESQL_PASSWORD: "${DB_PASSWORD}"
      POSTGRESQL_DATABASE: "${DB_DATABASE}"
    volumes:
      - ./db:/bitnami/postgresql


  pgadmin4:
    container_name: pgadmin4
    restart: always
    image: "dpage/pgadmin4:5.3"    
    expose:
      - "80"   
    ports:
      - "5050:80"        
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
  
      
  # node:
  #   container_name: node
  #   restart: always
  #   image: "jrtec/node-container"  
  #   # ports:
  #   #   - "5000:8081"
  #   # command: "sh -c 'yarn install && yarn build && yarn server'"
  #   command: "sh -c 'yarn server'"
  #   volumes:
  #     - ./react-frontend:/code
  #   environment:
  #     NODE_ENV: production
  #     PORT: 8081

  django:
    container_name: django
    restart: always
    image: "jrtec/django-video-inspections"    
#    command: "sh -c 'python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000'"
    command: "sh -c 'python manage.py makemigrations && python manage.py migrate && gunicorn django_backend.wsgi:application --bind 0.0.0.0:8000'"
    volumes:
      - ./django_backend:/code
    expose:
      - "8000" 
    # ports:
    #   - "5000:8000"  
    # depends_on:
    #   - db    
    
  nginx:
    container_name: nginx
    restart: always
    image: "nginx:1.19.10"  
    ports:
      - "80:8080"
    volumes:
      - ./django_backend/staticfiles:/code/staticfiles
      - ./nginx-config-files/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-config-files/app.nginx.template:/etc/nginx/templates/app.nginx.template
    environment:      
      PGADMIN: "pgadmin4:80"
    env_file: .env
    depends_on:
      - django      